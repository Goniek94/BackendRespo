const mongoose = require('mongoose');
require('dotenv').config();

async function checkDatabaseContent() {
  try {
    console.log('üîÑ ≈ÅƒÖczenie z bazƒÖ danych...');
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Po≈ÇƒÖczono z bazƒÖ danych:', process.env.MONGODB_URI);
    
    const db = mongoose.connection.db;
    const collections = await db.listCollections().toArray();
    
    console.log('\nüìã Dostƒôpne kolekcje:');
    for (const collection of collections) {
      const count = await db.collection(collection.name).countDocuments();
      console.log(`  - ${collection.name}: ${count} dokument√≥w`);
    }
    
    // Sprawd≈∫ u≈ºytkownik√≥w
    console.log('\nüë• U≈ªYTKOWNICY:');
    const usersCount = await db.collection('users').countDocuments();
    if (usersCount > 0) {
      console.log(`Znaleziono ${usersCount} u≈ºytkownik√≥w:`);
      const users = await db.collection('users').find({}).limit(5).toArray();
      users.forEach((user, index) => {
        console.log(`\n${index + 1}. U≈ºytkownik:`);
        console.log(`   Email: ${user.email}`);
        console.log(`   Imiƒô: ${user.firstName || 'brak'}`);
        console.log(`   Nazwisko: ${user.lastName || 'brak'}`);
        console.log(`   Rola: ${user.role || 'brak'}`);
        console.log(`   Utworzony: ${user.createdAt || 'brak'}`);
        console.log(`   ID: ${user._id}`);
      });
    } else {
      console.log('‚ùå Brak u≈ºytkownik√≥w w bazie danych');
    }
    
    // Sprawd≈∫ og≈Çoszenia
    console.log('\nüöó OG≈ÅOSZENIA:');
    const adsCount = await db.collection('ads').countDocuments();
    if (adsCount > 0) {
      console.log(`Znaleziono ${adsCount} og≈Çosze≈Ñ:`);
      const ads = await db.collection('ads').find({}).limit(3).toArray();
      ads.forEach((ad, index) => {
        console.log(`\n${index + 1}. Og≈Çoszenie:`);
        console.log(`   Tytu≈Ç: ${ad.title || 'brak'}`);
        console.log(`   Marka: ${ad.basicInfo?.brand || 'brak'}`);
        console.log(`   Model: ${ad.basicInfo?.model || 'brak'}`);
        console.log(`   Cena: ${ad.price?.amount || 'brak'} ${ad.price?.currency || ''}`);
        console.log(`   Status: ${ad.status || 'brak'}`);
        console.log(`   W≈Ça≈õciciel: ${ad.owner || 'brak'}`);
        console.log(`   ID: ${ad._id}`);
      });
    } else {
      console.log('‚ùå Brak og≈Çosze≈Ñ w bazie danych');
    }
    
    // Sprawd≈∫ inne wa≈ºne kolekcje
    console.log('\nüìä INNE KOLEKCJE:');
    
    const carBrandsCount = await db.collection('carbrands').countDocuments();
    if (carBrandsCount > 0) {
      console.log(`CarBrands: ${carBrandsCount} marek samochod√≥w`);
      const sampleBrand = await db.collection('carbrands').findOne({});
      console.log(`   Przyk≈Çad: ${sampleBrand?.brand || 'brak'}`);
    }
    
    const messagesCount = await db.collection('messages').countDocuments();
    console.log(`Messages: ${messagesCount} wiadomo≈õci`);
    
    const notificationsCount = await db.collection('notifications').countDocuments();
    console.log(`Notifications: ${notificationsCount} powiadomie≈Ñ`);
    
    console.log('\n‚úÖ Sprawdzanie zako≈Ñczone');
    process.exit(0);
    
  } catch (error) {
    console.error('‚ùå B≈ÇƒÖd podczas sprawdzania bazy danych:', error.message);
    console.error('Stack:', error.stack);
    process.exit(1);
  }
}

checkDatabaseContent();
