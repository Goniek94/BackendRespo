/**
 * KOMPLETNE CZYSZCZENIE CACHE FRONTENDU
 * Usuwa wszystkie mo≈ºliwe cache i restartuje frontend
 */

import fs from 'fs';
import path from 'path';
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);

async function clearFrontendCache() {
  console.log('üßπ KOMPLETNE CZYSZCZENIE CACHE FRONTENDU...\n');
  
  try {
    // 1. Zatrzymaj frontend je≈õli dzia≈Ça
    console.log('1Ô∏è‚É£ Zatrzymywanie frontendu...');
    try {
      await execAsync('taskkill /F /IM node.exe /FI "WINDOWTITLE eq *react-scripts*"');
      console.log('‚úÖ Frontend zatrzymany');
    } catch (error) {
      console.log('‚ÑπÔ∏è Frontend prawdopodobnie nie by≈Ç uruchomiony');
    }
    
    // 2. Usu≈Ñ node_modules i package-lock.json
    console.log('\n2Ô∏è‚É£ Usuwanie node_modules...');
    const frontendPath = '../marketplace-frontend';
    const nodeModulesPath = path.join(frontendPath, 'node_modules');
    const packageLockPath = path.join(frontendPath, 'package-lock.json');
    
    if (fs.existsSync(nodeModulesPath)) {
      await execAsync(`rmdir /s /q "${nodeModulesPath}"`);
      console.log('‚úÖ node_modules usuniƒôte');
    }
    
    if (fs.existsSync(packageLockPath)) {
      fs.unlinkSync(packageLockPath);
      console.log('‚úÖ package-lock.json usuniƒôty');
    }
    
    // 3. Usu≈Ñ build folder
    console.log('\n3Ô∏è‚É£ Usuwanie build folder...');
    const buildPath = path.join(frontendPath, 'build');
    if (fs.existsSync(buildPath)) {
      await execAsync(`rmdir /s /q "${buildPath}"`);
      console.log('‚úÖ Build folder usuniƒôty');
    }
    
    // 4. Wyczy≈õƒá npm cache
    console.log('\n4Ô∏è‚É£ Czyszczenie npm cache...');
    await execAsync('npm cache clean --force');
    console.log('‚úÖ NPM cache wyczyszczony');
    
    // 5. Reinstaluj dependencies
    console.log('\n5Ô∏è‚É£ Reinstalacja dependencies...');
    process.chdir(frontendPath);
    await execAsync('npm install');
    console.log('‚úÖ Dependencies zainstalowane');
    
    // 6. Uruchom frontend
    console.log('\n6Ô∏è‚É£ Uruchamianie frontendu...');
    console.log('üöÄ Frontend zostanie uruchomiony w nowym oknie...');
    
    // Uruchom w nowym oknie
    exec('start cmd /k "npm start"', { cwd: frontendPath });
    
    console.log('\n‚úÖ GOTOWE!');
    console.log('üìã Co zosta≈Ço zrobione:');
    console.log('   ‚Ä¢ Zatrzymano stary frontend');
    console.log('   ‚Ä¢ Usuniƒôto node_modules');
    console.log('   ‚Ä¢ Usuniƒôto package-lock.json');
    console.log('   ‚Ä¢ Usuniƒôto build folder');
    console.log('   ‚Ä¢ Wyczyszczono npm cache');
    console.log('   ‚Ä¢ Zainstalowano dependencies');
    console.log('   ‚Ä¢ Uruchomiono frontend na nowo');
    console.log('\nüåê Frontend powinien byƒá dostƒôpny na: http://localhost:3001');
    console.log('üîß Backend dzia≈Ça na: http://localhost:3000');
    console.log('\n‚ö†Ô∏è WA≈ªNE: Od≈õwie≈º przeglƒÖdarkƒô i wyczy≈õƒá cache przeglƒÖdarki (Ctrl+Shift+R)');
    
  } catch (error) {
    console.error('‚ùå B≈ÇƒÖd podczas czyszczenia cache:', error.message);
    process.exit(1);
  }
}

// Uruchom czyszczenie
clearFrontendCache();
